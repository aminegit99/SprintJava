<?php

namespace Container3vxFYly;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_JRBDSzRService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.jRBDSzR' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.jRBDSzR'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\RegistrationController::register' => ['privates', '.service_locator.kFkmpAc', 'get_ServiceLocator_KFkmpAcService', true],
            'App\\Controller\\ResetPasswordController::request' => ['privates', '.service_locator.pXhSQsU', 'get_ServiceLocator_PXhSQsUService', true],
            'App\\Controller\\ResetPasswordController::reset' => ['privates', '.service_locator.kdKsWx5', 'get_ServiceLocator_KdKsWx5Service', true],
            'App\\Controller\\SecurityController::login' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\UserController::ban' => ['privates', '.service_locator.GPGtF8v', 'get_ServiceLocator_GPGtF8vService', true],
            'App\\Controller\\UserController::delete' => ['privates', '.service_locator.9uW928t', 'get_ServiceLocator_9uW928tService', true],
            'App\\Controller\\UserController::edit' => ['privates', '.service_locator.9uW928t', 'get_ServiceLocator_9uW928tService', true],
            'App\\Controller\\UserController::editUserRoles' => ['privates', '.service_locator.4T4EJFR', 'get_ServiceLocator_4T4EJFRService', true],
            'App\\Controller\\UserController::index' => ['privates', '.service_locator.Sfu.weJ', 'get_ServiceLocator_Sfu_WeJService', true],
            'App\\Controller\\UserController::listUserBanned' => ['privates', '.service_locator.Lf9.KfB', 'get_ServiceLocator_Lf9_KfBService', true],
            'App\\Controller\\UserController::listUserByEmail' => ['privates', '.service_locator.Lf9.KfB', 'get_ServiceLocator_Lf9_KfBService', true],
            'App\\Controller\\UserController::listUserByUsername' => ['privates', '.service_locator.Lf9.KfB', 'get_ServiceLocator_Lf9_KfBService', true],
            'App\\Controller\\UserController::listUserVerified' => ['privates', '.service_locator.Lf9.KfB', 'get_ServiceLocator_Lf9_KfBService', true],
            'App\\Controller\\UserController::new' => ['privates', '.service_locator.Q1F27w5', 'get_ServiceLocator_Q1F27w5Service', true],
            'App\\Controller\\UserController::show' => ['privates', '.service_locator.4T4EJFR', 'get_ServiceLocator_4T4EJFRService', true],
            'App\\Controller\\UserController::unban' => ['privates', '.service_locator.GPGtF8v', 'get_ServiceLocator_GPGtF8vService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Controller\\RegistrationController:register' => ['privates', '.service_locator.kFkmpAc', 'get_ServiceLocator_KFkmpAcService', true],
            'App\\Controller\\ResetPasswordController:request' => ['privates', '.service_locator.pXhSQsU', 'get_ServiceLocator_PXhSQsUService', true],
            'App\\Controller\\ResetPasswordController:reset' => ['privates', '.service_locator.kdKsWx5', 'get_ServiceLocator_KdKsWx5Service', true],
            'App\\Controller\\SecurityController:login' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\UserController:ban' => ['privates', '.service_locator.GPGtF8v', 'get_ServiceLocator_GPGtF8vService', true],
            'App\\Controller\\UserController:delete' => ['privates', '.service_locator.9uW928t', 'get_ServiceLocator_9uW928tService', true],
            'App\\Controller\\UserController:edit' => ['privates', '.service_locator.9uW928t', 'get_ServiceLocator_9uW928tService', true],
            'App\\Controller\\UserController:editUserRoles' => ['privates', '.service_locator.4T4EJFR', 'get_ServiceLocator_4T4EJFRService', true],
            'App\\Controller\\UserController:index' => ['privates', '.service_locator.Sfu.weJ', 'get_ServiceLocator_Sfu_WeJService', true],
            'App\\Controller\\UserController:listUserBanned' => ['privates', '.service_locator.Lf9.KfB', 'get_ServiceLocator_Lf9_KfBService', true],
            'App\\Controller\\UserController:listUserByEmail' => ['privates', '.service_locator.Lf9.KfB', 'get_ServiceLocator_Lf9_KfBService', true],
            'App\\Controller\\UserController:listUserByUsername' => ['privates', '.service_locator.Lf9.KfB', 'get_ServiceLocator_Lf9_KfBService', true],
            'App\\Controller\\UserController:listUserVerified' => ['privates', '.service_locator.Lf9.KfB', 'get_ServiceLocator_Lf9_KfBService', true],
            'App\\Controller\\UserController:new' => ['privates', '.service_locator.Q1F27w5', 'get_ServiceLocator_Q1F27w5Service', true],
            'App\\Controller\\UserController:show' => ['privates', '.service_locator.4T4EJFR', 'get_ServiceLocator_4T4EJFRService', true],
            'App\\Controller\\UserController:unban' => ['privates', '.service_locator.GPGtF8v', 'get_ServiceLocator_GPGtF8vService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
        ], [
            'App\\Controller\\RegistrationController::register' => '?',
            'App\\Controller\\ResetPasswordController::request' => '?',
            'App\\Controller\\ResetPasswordController::reset' => '?',
            'App\\Controller\\SecurityController::login' => '?',
            'App\\Controller\\UserController::ban' => '?',
            'App\\Controller\\UserController::delete' => '?',
            'App\\Controller\\UserController::edit' => '?',
            'App\\Controller\\UserController::editUserRoles' => '?',
            'App\\Controller\\UserController::index' => '?',
            'App\\Controller\\UserController::listUserBanned' => '?',
            'App\\Controller\\UserController::listUserByEmail' => '?',
            'App\\Controller\\UserController::listUserByUsername' => '?',
            'App\\Controller\\UserController::listUserVerified' => '?',
            'App\\Controller\\UserController::new' => '?',
            'App\\Controller\\UserController::show' => '?',
            'App\\Controller\\UserController::unban' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\RegistrationController:register' => '?',
            'App\\Controller\\ResetPasswordController:request' => '?',
            'App\\Controller\\ResetPasswordController:reset' => '?',
            'App\\Controller\\SecurityController:login' => '?',
            'App\\Controller\\UserController:ban' => '?',
            'App\\Controller\\UserController:delete' => '?',
            'App\\Controller\\UserController:edit' => '?',
            'App\\Controller\\UserController:editUserRoles' => '?',
            'App\\Controller\\UserController:index' => '?',
            'App\\Controller\\UserController:listUserBanned' => '?',
            'App\\Controller\\UserController:listUserByEmail' => '?',
            'App\\Controller\\UserController:listUserByUsername' => '?',
            'App\\Controller\\UserController:listUserVerified' => '?',
            'App\\Controller\\UserController:new' => '?',
            'App\\Controller\\UserController:show' => '?',
            'App\\Controller\\UserController:unban' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
